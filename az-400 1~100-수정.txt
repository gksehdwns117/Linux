======================= topic 1 : QuestionSet 1 =======================
1. 3-2-1
1) 작업항목이 작성부터 완료까지의 경과시간 : Lead Time
> 리드 타임(Lead Time)은 작업 항목 생성에서 완료까지 경과된 총 시간을 측정함
2) 작업항목이 활성화된 후 완료하는 데 걸리는 시간: Cycle Time
> 주기 시간(Cycle Time)은 팀이 작업 항목에 대해 적극적으로 작업을 시작한 후 작업 항목을 완료하는데까지 걸리는 시간을 측정함
3) 남은 작업: Burndown
> 번다운 차트는 특정기간 내에 남아 있는 작업에 초점을 맞춤.

2. 4-4 > 3-2
1) 대부분의 사용자에게 페이지 로드 경험에 대한 알림을 제공하기 위해 가장 최댓값을 사용
2) 해당 문제는 인증 문제를 감지하기 위한 401,403 코드만 분석하면 됨. > 'success'를 사용하면 500과 같은 여러 예외 문제들도 감지하기 때문에 'result code' 사용 > App Insights에서 인증 오류의 경우 403을 표시하는 Request ResultCode 속성을 확인할 수 있음

3. B,D > A,B
• Azure Monitor를 사용하여 Azure의 대부분의 서비스에 대한 기본 수준 메트릭 및 로그를 모니터링할 수 있고 작업그룹을 사용하거나 클래식 경고를 사용하여 경고를 기반으로 작업을 자동화하여 Azure Automation Runbook을 호출할 수 있음.
• 동적 임계값 감지 기능이 있는 메트릭 경고는 고급 ML(Machine Learning)을 활용하여 메트릭의 과거 동작을 학습하고 가능한 서비스 문제를 나타내는 패턴 및 이상을 식별함, 사용자가 완전히 자동화된 방식으로 Azure RM API를 통해 경고 규칙을 구성할 수 있도록 하여 간단한 UI와 대규모 작업을 모두 지원함

4. 3-2 > 1-2
1) Liveness 설정은 실패하면 포드를 다시 시작하고, Readiness 설정은 포드를 시작하지 말고 서비스 로드 밸런서에서 제외됨, Startup 설정은 포드가 성공적으로 시작될때까지 위의 프로브를 비활성화함.
2) Probe Period (프로브 주기) > 1분에 4번 상태확인

5. B
• Application Insights의 세가지 가용성 테스트(URL ping, 다단계 웹, 사용자 정의 추적)
☞ URL Ping 테스트를 실행 > 가용성 테스트

6. A
• Application Insights는 성능 문제 및 예외에 대해 알려 주고 근본 원인을 찾고 진단하는데 도움
• Java 및 ASP,NET 웹 응용 프로그램과 서비스, WCF 서비스를 모두 모니터링하고, 온프레미스/가상머신/MS Azure 웹사이트로 호스팅할 수 있음
• 클라이언트 측에서 Application Insights는 웹 페이지와 IOS,Android 및 Windows Store 앱을 비롯한 장치에서 원격 분석을 수행할 수 있음

7. 시뮬레이션 문제(simul)

8. A > C
• ITSMC(IT 서비스 관리 커넥터)를 사용하면 Azure와 지원되는 ITSM(IT 서비스 관리) 제품/서비스를 연결할 수 있음
• ITSMC는 'Service Now, System Center Service Manager, Provance, Cherwell'과 같은 ITSM 도구와의 연결을 지원함

9. 2-1 > 1-2
개발자(피드백 요청) <> 파일럿 유저(피드백 제공)
• 피드백을 요청하려면 기본 액세스 이상의 권한이 부여되어야함.
• 피드백을 제공하거나 검토하려면 이해 관계자(stakeholder) 액세스 이상의 권한이 필요로함

10. A
• Azure Monitor Logs는 Azure Data Explorer를 기반으로 하며, 로그 쿼리는 동일한 Kusto 쿼리 언어(KQL)를 사용하여 작성되어 읽기 쉽고 작성하기 쉽도록 설계된 풍부한 언어이며 최소한의 지침으로 사용할 수 있어야함.

11. A,E
• 라이브 웹앱의 예외는 Application Insights로 보고됨.
• 프로그래밍 방식으로 Application Insights 데이터를 쿼리하여 일정에 따라 사용자 지정 보고서를 생성할 수 있음 > MS Flow로 보고서 자동화, Logic Apps 참조로 보고서 자동화

12. 2-3-1
• Application Insights의 분석 도구
☞ 'User' 도구는 사용자의 앱 및 해당 기능을 사용한 사람의 수, 사용자 수는 브라우저 쿠키에 저장되는 익명 ID를 사용하여 계산함
☞ 'Funnels'는 고객 환경을 이해하는 도구로 애플리케이션이 여러 단계와 관련된 경우 고객 대부분이 전체 프로세스를 거치는지 아니면 특정 시점에서 프로세스를 종료하는지를 알아야 할 때 사용
☞ 'Impact'는 로드 시간 및 기타 속성이 앱의 여러 부분에서 전환율에 미치는 영향을 분석하며 정확도를 높이기 위해 페이지 보기, 사용자 지정 이벤트 또는 요청의 모든 차원이 여러 페이지 보기 또는 사용자 지정 이벤트에 미치는 영향을 탐색함
ex. 사이트의 느린 속도가 사용자의 관심도 유지에 미치는 영향에 대한 탐색
☞ 'User flow' 도구는 페이지와 웹앱의 기능 간에 사용자가 탐색하는 방법을 시각화
> 사용자가 사이트 페이지에서 벗어나려면 어떻게 하나?
> 사용자가 사이트 페이지에서 어디를 클릭하나?
> 사용자가 사이트에서 가장 많이 이탈하는 위치는 어디인가?
> 사용자가 동일한 작업을 반복하는 위치가 있나?


13. C > B
• Visual Studio App Center 기능은 모든 장치에서 충돌 데이터를 수집하고 최종 사용자 장치에 Android, iOS, macOS 및 UWP 빌드를 빠르게 릴리스함.
A : 데스크톱 웹 사이트용 브라우저에서 사용되는 확장 프로그램

14. C,D,E
WebApp1이 상태 저장 세션(stateful)을 사용하므로 기능을 테스트하려면 VMSS1의 로드 밸런서 설정을 수정해야함(A)??
VMSS1의 사용자 정의 스크립트 확장 설정까지 수정할 필요가 있나??

15~17. simul

18. 7-1 > 7-3
• 가장 오래된 이벤트부터 최신 이벤트까지 이벤트를 정렬하려면 order문에서 desc대신 asc를 사용하면 되는데 이 작업은 고유한 값의 목록만 만드는 것이 유용할 수 있음 > 이 목록을 집합이라고 하며 makeset 명령을 사용하여 생성할 수 있음 

19. 2-4 > 3-4
• 실패한 것(False)으로 표시된 추적된 서버 요청(Request)

20. B > D
• 스마트 감지는 웹 애플리케이션의 잠재적인 성능 문제와 오류 이상에 대해 자동으로 경고하여 앱이 application insights에 보내는 원격 분석의 사전 분석을 수행함
• 장애율이 갑자기 증가하거나 클라이언트 또는 서버 성능에 비정상적인 패턴이 있는 경우 경고를 받으며 다른 구성이 필요하지 않고 애플리케이션이 충분한 원격 분석을 보내는 경우 작동함

21. 1-3 > 3-1
1) 프로젝트의 모든 파이프라인 모니터링을 시작하려면 채널 내에서 다음 명령을 실행
ex. azure pipelines subscribe [project url]
2) 알림을 수신하기 위해 프로젝트의 파이프라인 또는 모든 파이프라인을 구독함.

22. A > C
https://docs.microsoft.com/ko-kr/azure/devops/boards/github/install-github-app?view=azure-devops
• Azure Boards는 소프트웨어 개발 팀에게 소프트웨어 프로젝트를 관리하는 데 필요한 대화형 및 사용자 지정 가능한 도구를 제공하여 Agile, Scrum, Kanban 프로세스, 일정 보기, 구성 가능한 대시보드 및 통합 보고에 대한 기본 지원을 포함하여 다양한 기능을 제공하는 서비스
• GitHub용 Azure Boards 앱 설치는 Azure Boards를 GitHub 리포지토리에 연결하는 첫번째 단계

23. A > C (21번과 비슷한 시나리오)
• Azure Pipeliens 앱은 채널에 표시되는 내용을 사용자 지정하는 필터를 지원하고 '@Azure Pipelines' 구독 명령을 실행하여 모든 구독 보기를 선택함,
• 필터를 효과적으로 사용하여 구독 사용자 지정 사용자가 파이프라인을 구독하면 몇 가지 구독은 기본적으로 필터를 적용하지 않고 생성됨. 종종 사용자는 이러한 구독을 사용자 정의해야함.
A : 질문에 이미 Project1을 구독하고 있어 논리적인 다음 단계는 구독을 사용하여 실패를 특정 필터로 만드는 것

24. A > B
https://azuredevopslabs.com/labs/vstsextend/teams/
• Azure DevOps Services와 MS Teams의 통합은 개발 주기 전반에 걸쳐 포괄적인 채팅/협업 환경을 제공함 > 팀은 작업 항목, 끌어오기 요청, 코드 커밋, 빌드/릴리스에 대한 알림 및 경고를 통해 Azure DevOps 팀 프로젝트의 중요한 활동에 대한 정보를 쉽게 얻을 수 있음
• 통합을 하기 위해 먼저 팀 채널의 상단 탐색에서 '...'을 선택하고 커넥터를 선택하여 'Azure DevOps' 커넥터를 추가

25. B > A
• 활동 로그 이벤트는 리소스의 중지,시작,리소스 삭제를 기록함.

26. B > A
• 'Enable Diagnostics to Log Analytics' 구성은 데이터베이스별로 수행
> 진단 설정에서 'on' 설정 > Log Analytics로 보내기를 선택하고 작업영역을 선택함

27. 2-1-1
1) 집계 세분성(기간)은 5분, 빈도는 1분
추가된 시계열의 첫번째 평가를 놓칠 가능성을 줄이기 위해 평가 빈도보다 큰 집계 세분성(기간)을 선택
• '정적임계값'은 특정 메트릭 값이 구성된 값보다 커지거나 작아지면 임계값 기반 경고가 생성됨
• '동적임계값'은 기간별 데이터 분석을 기반으로 시스템에 의해 임계값이 결정되는 경우 해당 값을 위반하면 경고가 생성되고 데이터는 경고가 생성되기 전 7일의 기간 동안 본석되어 기준선을 생성하는 프로세스는 21일의 기간별 데이터로 제한되고 그보다 오래된 메트릭 값은 새 메트릭 값에 대한 기준선을 생성하는데 고려되지 않음.
======================= topic 2 : QuestionSet 2 =======================
28. 3-1-2
@ Litware, Inc.
: PBI(제품 백업 항목) 및 Kanban 보드의 버그를 추적합니다. PBI를 태스크 보드의 태스크로 나눔
@ Contoso, Ltd.
: Kanban 보드의 사용자 스토리와 버그를 추적합니다. 태스크 보드의 버그와 작업을 추적
@ A. Datum Corporation
: 요구사항, 변경 요청, 위험 및 검토를 추적
• Scrum 프로세스는 Kanban 보드에서 제품 백로그 항목(PB) 및 버그를 추적하거나 작업 보드의 작업으로 분석하려는 경우 효과적인 프로세스
• Agile 프로세스는 Kanban 보드에서 사용자 스토리 및 버그를 추적하거나 작업 보드에서 버그 및 작업을 추적하려는 경우에 효과적임
• CMMI 프로세스는 팀에서 프로세스 개선을 위한 프레임워크 및 감사 가능한 의사 결정 레코드가 필요한 보다 공식적인 프로젝트 메서드를 따르는 경우 효과적인 프로세스 > 태스크는 원래 예상, 남은 작업 및 완료된 작어 추적을 지원함

29. C
https://dailydotnettips.com/sending-your-azure-application-insights-alerts-to-team-sites-using-azure-logic-app/
• Logic App Designer에서 요청 트리거로 HTTP 요청을 수신하는 단계를 추가함.
• Azure Logic Apps 및 기본 제공 HTTP 트리거 또는 작업을 사용하여 아웃바운드 요청을 보낼 수 있는 자동화된 작업 및 워크플로를 만들 수 있음 > HTTP/HTTPS를 통해 다른 서비스 및 시스템의 끝점 대신 인바운드 HTTPS 호출을 수신하고 응답하려면 기본 제공 요청 트리거 및 응답 작업을 사용해야함

30. A
• 활성 및 준비 상태 프로브는 모두 애플리케이션의 상태를 제어하는데 사용되지만 활성상태 프로브에 실패하면 컨테이너가 다시 시작되는 반면에 준비 상태 프로브에 실패하면 애플리케이션에서 트래픽을 제공하지 않음.

31. D
• Azure SQL 및 웹사이트(Web apps)와 같은 PaaS 리소스는 기본적으로 Log Analytics에 성능 메트릭 데이터를 내보낼 수 있음
B : Intelligent Insights는 지난 1시간의 데이터베이스 작업 부하를 지난 7일 기준 작업 부하와 비교하여 데이터베이스 성능을 분석함.

32. A
• 스마트 탐지에는 이메일로 경고할 수 있는 "예외 볼륨의 비정상적 증가"라는 표준 규칙이 존재
B : 기능 실패를 사용하면 예외를 직접 검색해야함.

33. simulation

34. C > D
• Azure 대시보드는 사용자 지정 마크다운 타일을 사용하여 사용자 지정 정적 콘텐츠를 표시할 수 있음 
> A,C,D 모두 Azure Monitor의 시각적 개체와 Kusto 쿼리 및 RBAC을 지원하지만 마크다운도 지원하는 유일한 답변은 대시보드(D)임

35. C > B
• 릴리스 파이브라인의 일부로 사용자 인터페이스(UI) 테스트를 수행하는 것은 예기치 않은 변경을 감지하는 좋은 방법이며 'Selenium'은 지속적인 배포 릴리스 및 테스트 자동화 중에 웹 사이트를 테스트하는데 사용할 수 있음



36. C,D > C,E
• 샘플링은 Azure Application Insights의 기능으로 원격 분석 트래픽, 데이터 비용 저장 비용을 줄이는 동시에 응용 프로그램 데이터에 대한 통계적으로 정확한 분석을 유지하는데 권장되는 방법
• 적응형 샘플링을 비활성화하고 대신 고정 속도 샘플링을 사용
"고정 속도 샘플링은 ASP.NET 또는 ASP.NET Core 또는 Java 서버와 사용자 브라우저에서 전송되는 원격 분성의 양을 줄이고 속도를 설정함
• 클라이언트 서버는 샘플링을 동기화하여 검새게서 간련 페이지 보기와 요청 사이를 탐색 가능

37. C > D
• 애플리케이션 상태를 모니터링하는 것은 배포를 관리하고 업그레이드하기 위한 중요한 신호로, VMSS은 배포를 업그레이드 하기 위해 개별 인스턴스의 상태 모니터링에 의존하는 자동 OS 이미지를 업그레이드를 포함하여 롤링 업그레이드를 지원하고 또한 상태 확장을 사용하여 확장 집합에 있는 각 인스턴스의 애플리케이션 상태를 모니터링하고 자동 인스턴스 복구를 사용하여 인스턴스 복구를 수행할 수 있음
A : LB 상태 프로브는 클라이언트 인증서와의 상호 인증을 지원하지 않고 기본 SKU LB 상태 프로브는 가상 머신 확장 집합에서 지원되지 않음

38. 4-3
1) 테스트 빈도 설정으로 각 테스트 위치에서 테스트가 실행되는 빈도를 설정함
2) 종속 요청 구문 분석 설정으로 테스트는 테스트 중인 웹 페이지의 일부인 이미지, 스크립트, 스타일 및 기타 파일을 요청하여 기록된 응답 시간에는 이러한 파일을 가져오는 데 걸린 시간이 포함 > 전체 테스트의 제한 시간 내에 이러한 리소스를 성공적으로 다운로드 할 수 없으면 테스트가 실패함
** Http 200 : 서버가 요청을 제대로 처리했다는 뜻

39. C,D > B,D
• Flasky를 선택하여 분석 또는 컨텍스트를 기반으로 테스트를 비정상으로 표시하거나 해체할 수 있어 비정상적 테스트 관리를 구성하려면 프로젝트 설정을 선택하고 파이프라인 섹션에서 관리를 선택하여 수동으로 테스트를 비정상으로 표시
A : 비정상적 테스트 감지를 비활성화라면 테스트가 실패할 때 파이프라인이 항상 실패한 것으로 표시되어 비정상적 테스트 감지를 통해 AZ는 실패한 테스트가 비정상적임을 감지하고 파이프라인이 정상적으로 완료되도록 할 수 있음

40. D > C
• Qulity Gates를 사용하여 배포 전/후에 모니터링을 통합하면 애플리케이션이 개발에서 프로덕션으로 이동할 때 주요 상태/성능 메트릭(KPI)을 충족하고 인프라 환경이나 규모의 차이가 KPI에 부정적인 영향을 미치지 않도록 함.
✑ 품질 검증, 통과율 또는 코드 적용 범위와 같은 빌드 아티팩트에 대한 테스트의 메트릭을 쿼리하고 필요한 임계값 내에 있는 경우에만 배포

41. B (44~46번과 같은 시나리오)
• AzSK(The Secure DevOps Kit for Azure)의 구독 보안 상태 확인 기능에는 구독을 검사하고 구독을 더 높은 위험에 노출시킬 수 있는 보안 문제, 잘못된 구성 또는 사용되지 않는 아티팩트/설정에 플래그를 지정하는 스크립트 집합이 포함되어 있음.

42. C,E
https://docs.microsoft.com/ko-kr/azure/defender-for-cloud/features-paas
• Windows Server는 Azure Defender에서 지원하지만 ACR의 Windows 이미지는 지원 X
• 취약점 스캔은 주로 VM에 대한 것임
• Azure Paas 리소스에 대한 MS Defender for Cloud 기능의 가용성의 취약점 평가 대상은
☞ Azure Container Registry , Azure SQL Database, Azure SQL Managed Instance, Azure VM

43. D > B
• 'Dependabot'은 종속성 업데이트를 정기적으로 확인하는 데 유용한 도구로, 프로젝트를 최신 상태로 유지함으로써 기술적 부채를 줄이고 패치가 출시되는 즉시 보안 취약점을 적용할 수 있음
☞ 종속성 업데이트가 발견되면 업그레이드된 종속성으로 새 풀 요청이 생성되고 이메일 알림이 전송되어 Pull Request를 검토하고 모든 테스트가 성공적으로 통과했는지 확인하여 업데이트를 승인하고 병합함

44. B
• 코드 적용 범위는 테스트 케이스가 적용된 코드 기반의 양만 확인하는 것
45. B
• CI(지속적 통합)은 관련이 없음
46. A
• CA(Continuous Assurance)의 기본 개념은 시스템의 보안 스냅샷으로 간주되는 항목에서 "드리프트"를 확인하는 기능을 설정하는 것으로 지속적인 보증에 대한 지원을 통해 보안을 '시점' 달성이 아닌 '상태'로 취급
• CA를 설정하는 사용자는 구독에 대한 '소유자' 액세스 권한이 있어야함

47. A > C
• Azure App Configuration의 관리자는 애플리케이션에서 사용하는 기능 플래그를 만들고 관리하기 위한 UI를 제공함
☞ App Configuration은 몇 분안에 설정할 수 있는 완전 관리형 서비스로 '유연한 키 표현 및 매핑','레이블을 사용한 태그지정','설정의 특정 시점재생','기능 플래그 관리를 위한 전용 UI',''두 세트의 비교 사용자 정의 차원에서 구성의 Azure 관리 신원을 통해 보안을 강화'.'애플리케이션 비밀을 저장되는 데 사용되는 Azure Key Vault 지원'등의 이점이 있음


48. C
• k8s는 준비 상태 프로브를 사용하여 컨테이너가 트래픽을 수락할 수 있는 시점을 결정, 준비 상태 프로브는 서비스의 백엔드로 사용되는 포드를 제어하는 데 사용.
• Azure Container Instances는 특정 조건에서 컨테이너에 액세스할 수 없도록 구성을 포함하도록 준비 프로브를 지원함.
A : 컨테이너화된 애플리케이션은 장기간 실행될 수 있으며, 결과적으로 컨테이너를 다시 시작하여 복구해야하는 손상된 상태가 발생할 수 있어 ACI는 활성 프로브를 지원하므로 중요한 기능이 작동하지 않는 경우 다시 시작하도록 컨테이너 그룹 내의 컨테이너를 구성할 수 있음

49. C,D > B,D
 

======================= topic 3 : QuestionSet 3 =======================
50. n-y-n > n-y-y
• 대시보드의 권한은 기본적으로 모든 팀 구성원이 팀의 대시보드를 만들고 편집할 수 있는 권한이 있음
• 대시보드의 삭제, 수정할 수 있는 관리 권한은 Project Administrartor만 가질 수 있음

51. B > D
• White Source는 지속적인 오픈 소스 소프트웨어 보안 및 규정 준수 관리의 서비스로 프로그래밍 언어, 빌드 도구 또는 개발 환경에 관계없이 빌드 프로세스에 통합되어 백그라운드에서 자동으로 지속적으로 자동으로 작동하여 WhiteSource에서 지속적으로 업데이트되는 오픈 소스 리포지토리의 최종 데이터베이스에 대해 오픈 소스 구성 요소의 보안, 라이선스 품질을 확인함.
☞ White Source는 Azure DevOps/DevOps Server와의 통합을 위해 개발된 경량 오픈 소스 보안 및 관리 솔루션인 WhiteSource Bolt를 제공함.

52. A > B
• Azure Artifacts 자격 증명 공급자는 .NET 개발 워크플로의 일부로 NuGet 패키지를 복원하는데 필요한 자격 증명 획득을 자동화(Artifacts 피드의 패키지를 사용하려고 할 때마다 자격 증명 공급자는 사용중인 NuGet 클라이언트를 대신하여 토큰을 자동으로 획득하고 안전하게 저장함)
☞ MSBuild, dotnet 및 NuGet(.exe)과 통합되며 Windows, Mac, Linux에서 작동함


53. A
• Azure Pipelines 앱은 OAuth 인증 프로토콜을 사용하며 조직이 사용하도록 설정하려면 OAuth를 통한 타사 애플리케이션 액세스가 필요로함
☞ 해당 설정을 활성화하려면 조직 설정 > 보안 > 정책으로 이동하고 조직에 대한 OAuth를 통한 타사 애플리케이션 액세스 설정을 'on'으로 설정함

54. D > B
• GItHub 앱은 Azure Pipelines ID를 사용함.
A,D : 개인 액세스 토큰과 OAuth는 개인 GitHub ID를 사용함

55. A.
• 시스템에 SSH 키가 아직 설정되어 있지 않거나 자격 증명으로 부여된 권한을 제한해야 하는 경우 PAT를 사용하여 인증함
자체 호스팅 서버의 PAT(개인 액세스 토큰) 사용
https://docs.microsoft.com/en-us/azure/devops/pipelines/agents/v2-linux?view=azure-devop

56. B
• Azure AD를 사용하도록 애플리케이션을 등록하면 개발자가 AD를 사용하여 요청 사용자를 인증하고 전자 메일, 일정 및 문서와 같은 사용자 리소스에 대한 액세스를 요청할 수 있음

57. D > A
• PAT(Private Access Token)를 사용하면 사용자 이름과 암호를 직접 사용하지 않고도 Azure 
DevOps 및 TFS(Teams Foundation Server)에 액세스 할 수 있음
• 토큰에는 생성된 날짜부터 만료 날짜가 있어 액세스 할 수 있는 범위를 제한할 수 있음
• 시스템에 SSH 키가 아직 설정되어 있지 않거나 자격 증명으로 부여된 권한을 제한해야 하는 경우 PAT를 사용하여 인증함

58. D

59. D
ARM이 인프라를 생성하는데 사용하기 때문에.. 

60. simulation

61. B
List(A) , Get(B) , Get & List(C)
• 자격 증명 모음의 데이터에 액세스하려면 파이프라인에서 인증에 사용할 서비스 주체에 읽기(Get) 권한을제공해야함

62. 3-1 > 1-3
1) 템플릿에 대한 액세스 권한을 키 자격 증명 모음 읽기에 부여하려면 액세스 정책이 필요함
2) 하나의 비밀에 대한 액세스를 제한하려면 RBAC도 유효함

63. 1-2 > 2-4
1) Reader 역할의 구성원은 에이전트뿐 아니라 조직 에이전트 풀을 볼 수 있고 일반적으로 에이전트 및 해당 상태 모니터링을 담당하는 운영자를 추가하는 데 사용함
2) 사용자 역할은 파이프라인을 작성할 때 프로젝트 에이전트 풀을 사용할 수 있음

64. A > D(지점 Branch)
• 어떤 경우에는 분기(Branch) 정책이 충족되지 않더라도 변경 사항을 분기에 직접 푸시하거나 풀 요청을 완료할 수 있도록 정책 요구 사항을 우회해야함
☞ 해당 우회는 이전 목록에서 원하는 권한을 사용자 또는 그룹에 부여하는데 이 권한의 범위를 전체 프로젝트, 리포지토리 또는 단일 분기(Branch)로 지정할 수 있음

65. A
• 배포하는 동안 보안 값(ex.암호)을 매개변수로 전달해야 하는 경우 Azure Key Vault에서 값을 검색할 수 있어 매개 변수 파일에서 키 자격 증명 모음 및 비밀을 참조흐여 값을 검색함
☞ 키 자격 증명 모음은 배포하려는 리소스 그룹과 다른 구독에 있을 수 있음

66~67. simulation

68. 3-1-4 > 2-1-4
• 애플리케이션 등록은 애플리케이션이 Azure AD를 통해 사용자를 인증할 수 있도록 하기 위한 것으로 AKS 클러스터와는 관련이 없음
• 클러스터 생성 > 시스템 할당 관리 ID 생성 > RBAC 바인딩 

69. 1-3
1) ARM
2) AAD의 리소스에 대한 관리 ID 기능은 자동으로 관리되는 ID를 Azure 서비스에 제공하여 ID를 사용하여 코드에 자격 증명 없이 Key Vault를 포함하여 Azure AD 인증을 지원하는 모든 서비스에 인증할 수 있음
"Azure DevOps에서 자격 증명 및 토큰을 유지하지 마십시오."
☞ 관리 ID를 사용하면 개발자가 자격증명을 관리할 필요가 없음

70. A,B,E > B,C,E
• 저장된 자격증명(앱 ID/암호, 클라이언트 암호) 없이 Azure AD 인증을 사용하여 KV로 앱을 인증할 수 있도록 Azure 리소스에 대한 관리 ID(시스템 할당-보호)를 활용할 수 있음
A : MSI에는 RBAC이 필요로하지 않음 > RBAC은 KV 자체에 대한 정보에 액세스 권한을 부여하지만 액세스 정책은 KV 콘텐츠에 대한 액세스 권한을 부여함


71. 2-3 > 3-3
"솔루션은 조직 수준에서 관리해야함"
• Visual Studio Team Services의 App Center로 배포 작업을 사용하면 Azure DevOps에서 App Center로 앱을 배포할 수 있음 > App Center에 배포하면 빌드를 사용자에게 배포할 수 있음
1) 배포 그룹은 릴리스에 대한 액세스를 제어하는 데 사용, 메일 그룹은 공동으로 관리할 수 있고 릴리스에 대한 공통 액세스 권한을 가질 수 있는 사용자 집합을 나타냄
☞ 메일 그룹의 예로는 QA 팀 또는 외부 베타 테스터와 같은 사용자 팀이 있거나 스테이징과 같은 릴리스의 단계 또는 링을 나타낼수 있음
2) 공유 메일 그룹은 단일 조직의 여러 앱에서 공유되는 개인 또는 메일 그룹으로 공유 그룹을 사용하면 여러 앱에 메일 그룹을 복제할 필요가 없음

72. C (75번과 비슷한 시나리오)
• 변수 그룹에는 YAML 파이프라인으로 전달하거나 여러 파이프라인에서 사용할 수 있도록 설정할 수 있는 값/비밀이 저장됨 > 변수 그룹(매개 변수)은 Key Vault에 연결할 수 있음

73. D
• 조건부 액세스는 Azure AD의 기능으로 조건에 따라 클라우드 앱에 액세스하기 위한 자동화된 액세스 제어 결정을 구현할 수 있음

74. B
• 정책은 기존 리소스에 영향을 미치지 않음
• supportHttpsTrafficOnly : 비 Https 트래픽을 거부함
allof if 조건문으로 모든 조건이 참이여야함 > type이 storageaccount , https 암호화가 되지 않은 계정


75. A (72번과 비슷한 시나리오)

76. 4-1-6 > 1-5-4
• OAuth를 사용하여 Azure DevOps Services/Server를 GitHub Enterprise Server와 연결하려는 경우 먼저 애플리케이션을 OAuth 앱으로 등록해야함
☞ Azure DevOps의 조직 설정에 OAuth 구성 ☞ GitHub Connection 추가

77. 2-3-6 > 1-3-5 
https://azuredevopslabs.com/labs/vstsextend/azurekeyvault/#task-1-creating-a-service-principal
• Azure 파이프라인에서 Azure 리소스에 앱을 배포하려면 서비스 주체가 필요함
• 앱 등록은 SP를 만드는 데 사용되는 템플릿으로 SP는 인증 및 권한 부여가 가능한 보안 주체
☞ 이를 수행하는 가장 일반적인 방법은 앱 등록을 생성하는 것으로 여기에서 서비스 주체를 얻게 되면 해당 앱/SP를 사용하여 키 자격 증명 모음에 저장한 다음 마지막 단계로 파이프라인에서 해당 SP를 사용함

78. 3-1 > 3-2
1) 코드를 Wiki로 게시하려면 저장소 생성 권한이 있어야 하는데 기본적으로 이 권한은 'Project Admin' 구성원에 대해 설정됨.
2) Contributors 보안 그룹의 사용자는 Wiki 페이지를 추가하거나 편집할 수 있어 이해 관계자(Stake Holders)를 포함하여 팀 프로젝트에 대한 액세스 권한이 있는 사람은 누구나 Wiki를 볼 수 있음

79. A.B > A,C ***
• NPM 종속성을 해결하려면 플러그인을 실행하기 전에 먼저 관련 폴더에서 "npm install" 명령을 실행해야함
• 모든 npm 패키지에는 일반적으로 프로젝트에 package.json이라는 파일이 존재함 > 해당 파일은 프로젝트와 관련된 다양한 메타데이터를 보유하여 npm 프로젝트를 식별할 수 있도록 하는 정보를 npm에 제공하는 데 사용됨.
☞ 프로젝트의 종속성을 처리하기 위해 여기에는 프로젝트 설명, 특정 배포판의 프로젝트 버전, 라이선스 정보, 구성데이터와 같은 다른 메타데이터도 포함될 수 있음

80. B
White Bolt 솔루션이지만 White Bolt가 CI의 필수 구성원이 아니기 때문에 CI 구축으로만 솔루션이 되지는 않음
81. B
82. B > A
• White Bolt는 IS 자동화된 보안 테스트 솔루션이므로 CI(지속적 통합)의 답변보다 구체적이고 정확함
83. B

84. simulation

85. 3-1 > 3-2 
1) Resource Group
2) 추가는 태그가 아닌 속성과 함께 사용하기 위한 것이므로 해당 문제에서 'append'를 사용 X
해당 정책은 '거부' 효과가 있는 "리소스 그룹에 대한 태그 및 해당 값 필요"라는 기본 제공 정책 정의


86. D > B
• Git 클라이언트에서 Git 리포지토리에 처음 연결할 대 자격 증명 관리자는 자격 증명을 묻는 메시지를 표시함(MS 계정 또는 Azure AD 자격 증명을 제공함)

87. D > A
• 배포 게이트에 대한 정책 수준을 확인하여 릴리스에 대한 승인 프로세스를 확장하고 결과를 사용하여 배포를 승인하거나 거부하는 외부 서비스에 대한 자동 호출을 구성할 수 있고 사용자 개입 없이 릴리스가 광범위한 기준을 충족하는지 확인할 수 있음

88. 4-3-5
az RBAC 실행 > YAML 파일 생성 > Kubectl apply 실행
• 해당 문제의 시나리오는 Helm과 관련이 없음
RBAC이 있는 AKS 문제로 RBAC 역할 할당 만들고 YAML 파일 생성 Apply 실행

89. C

90. C > D
• SonarQube는 코드의 개선 영역을 식별하는데 사용할 수 있는 정적 분석기 세트로 프로젝트의 기술 부채를 분석하고 향후 이를 추적할 수 있음
B : Jenkins는 소프트웨어 프로젝트에 대한 CI/CD를 설정하는데 사용되는 오픈소스 자동화 서비스

91 C > B
• 피드의 소유자, 기여자, 공동작업자, 독자 중 'Unlist/Deprecate' 권한은 소유자와 기여자만 

92. C
• Azure DevOps와 WhiteSource Bolt의 통합을 통해 다음을 수행할 수 있음
☞ 취약한 오픈 소스 구성 요소를 감지하고 수정함
☞ 프로젝트 또는 빌드별로 포괄적인 오픈 소스 인벤토리 보고서를 생성함
☞ 종속성 라이선스를 포함한 오픈 소스 라이선스 준수를 시행함
☞ 업데이트 권장 사항이 있는 오래된 오픈 소스 라이브러리를 식별함

93. C
• Black Duck은 조직이 애플리케이션 및 컨테이너 포트폴리오 전반에 걸쳐 오픈 소스 보안, 라이선스 규정 준수 및 코드 품질 위험을 식별하고 완화할 수 있도록 지원함
• Black Duck Hub와 TFS(Teams Foundation Server)용 플러그인을 사용하면 빌드 프로세스 중에 오픈 소스 보안 취약성을 자동으로 찾아 수정할 수 있으므로 위험을 사전에 관리하고 통합을 통해 Black Duck Hub 정책 위반이 충족될 때 경고를 수신하고 빌드에 실패할 수 있음

94. 4-2 > 1-2
• 모든 Azure Artifacts 피드에는 인증이 필요하므로 패키지를 설치하거나 게시하기 전에 피드에 대한 자격 증명을 저장해하는데 npm은 .npmrc 구성 파일을 사용하여 피드 URL 및 자격 증명을 저장함(Azure DevOps Services는 두 개의 .npmrc 파일을 사용할 것을 권장함)
1) The .npmrc file in the project - 하나의 .npmrc는 프로젝트의 packasge.json에 인접한 git repo의 루트에 있어야 하고 여기에는 피드에 대한 "레지스트리" 행이 포함되어야 하며 git에 체크인되므로 자격 증명을 포함하지 않아야함
2) The .npmrc file in the user's home folder - 개발 시스템에서 Linux 또는 Mac 시스템의 경우 $home 또는 win 시스템의 경우 $env.Home에 .npmrc가 있어 연결해야하는 모든 레지스트리에 대한 자격 증명이 포함되어야 하고 NPM 클라이언트는 프로젝트의 .npmrc를 보고 레지스트리를 검색하고 $home/.npmrc 또는 $env.Home/.npmrc에서 일치하는 자격증명을 가져옴

95. 2-1 > 1-1
1) WhiteBolt - Build Task(빌드 트리거)
"파이프라인 탭 아래의 빌드 섹션으로 이동하여 빌드 정의 WhiteSourceBolt를 선택하고 대기열을 클릭하여 빌드를 트리거함" > 진행중인 빌드 상태를 보려면 줄임표를 클릭하고 빌드 결과 보기를 선택함
2) WhiteSource는 지속적인 오픈 소스 소프트웨어 보안 및 규정 준수 관리 서비스

96. C
• Black Duck은 조직이 애플리케이션 및 컨테이너 포트폴리오 전반에 걸쳐 오픈 소스 보안, 라이선스 규정 준수 및 코드 품질 위험을 식별하고 완화할 수 있도록 지원함

97. 4-3-1
• 서비스 원칙을 수동으로 생성하기 위해 질문의 요구 사항에 지정된 Custom 서비스 원칙 생성하기 위해 'az ad sp create-for-rbac' > AKS 클러스터에 대한 서비스 주체를 지정하기 위해 'az aks 
create' > 다른 azure 리소스에 액세스 할 수 있도록 CREATED 서비스 원칙을 위임하기 위해
'az role assignment create'

98. A > C
• 성공적인 IOS 장치 빌드는 ipa 파일을 생성하고 장치에 빌드를 설치하려면 유효한 프로비저닝 프로필 및 인증서로 서명해야함
☞ 분기에서 생성된 빌드에 서명하려면 구성 창에서 코드 서명을 활성화하고 인증서 암호와 함께 프로비저닝 프로필(.mobileprovision) 및 유효한 인증서(.p12)를 업로드함

99. simulation

100. 5-2-3 > 1-2-5
1) 서비스 주체 생성
2) Project1에서 서비스 연결 생성(ARM/수동) 및 생성된 서비스 주체 세부 정보 제공
3) Pipeline1에서 서비스 연결 승인
☞ 해당 과정을 통해 Pipeline1만 웹앱에 액세스할 수 있고 Pipeline2에는 액세할 수 없음
