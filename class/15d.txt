** 정규표현식	
> BRE : Basic Regular Expression
	- '*' '.' '^' '$' 
> ERE : Extend Regular Expression
	- '+' '?' '()'
** \1 : 앞의 escape문자로 처리된 가로(캡쳐)의 첫번째를 의미
** 멀티명령어 사용 : sed 하나의 명령어로 여러행을 여러조건으로 실행 할 때 ';'로 구분



<명령어>
>> http://www.gnu.org/software/sed/manual/sed.html
sed(Stream Editor)  			파일이름
	추가	{a|c|i}			> '적용할행번호a\추가할내용
					- 행번호: 생략(전체행) 1,3(1행에서 3행까지)
	'a' 				현재 행의 밑줄에 새로운 행을 추가
	'c'				현재 행의 내용을 새로운 내용으로 교체
	'i'				현재 행의 윗줄에 새로운 행을 추가
	
	치환	s			>'적용할행번호s/기존내용/바꿀내용/[g,i/I,n]
					- [g](행전체) [i/I](대소문자 구분x) [n](각행의 매칭된 n번째 단어)					
		키워드/[!] s		>키워드에 매칭되는 행만 치환
					>'i'는 부정(not)을 뜻함
		s/기존내용/추가내용 &/	>해당 커서앞에 내용을 추가
			/& 추가내용/ 	>해당 커서뒤에 내용을 추가

			
	
	삭제	d			>'(적용할행번호/매칭키워드)d'
		키워드/Id			>키워드의 대소문자 구분없이 매칭해서 삭제					
		
	> 원본파일에 변형을 주지 않고 출력되는 결과를 변화시켜 보여주는 역할
	> 변경된 내용은 원본파일에 영향을 주지 않는다
	> 일괄적인 작업들이 빠르다
 	[옵션]
	-n				변경된 라인만 출력
	-f 	스크립트파일		스크립트 파일을 불러오는 옵션
	-e				다중편집을 가능하게 하는 옵션
	-i				원본파일에도 변경된 내용이 저장







sed 's/\(.*\)Programming/\1Scripting/' lang.txt ?? 
echo "/etc/sysconfig/network-scripts/ifcfg-ens33" | sed 's/.*\///'
		> 위치절대경로중 파일이름만 명시 할 때 사용
sed 's/[a-z]\)/\U\1/' weekday.txt
		> sed 명령어중 소문자를 대문자로 바꾸는 키워드 '\U'