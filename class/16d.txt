** grep과 sed는 행단위로 처리함
	> awk는 자료처리형, 즉 열단위의 처리도 가능
** awk로 모든 자료를 처리 할 수 X
	> 패턴이 존재해야함
	> 패턴을 기준으로 column단위로 자료를 처리
	> 패턴을 생략할경우 default는 공백
** awk {action} 문법
	> print : 뒤에 나오는 필드와 문자열을 출력
** 해당 필드를 모두 더하거나 연산 가능 (BEGIN - END) 문법
	> df | awk 'BEGIN{sum=0}{sum+=$2}END{print "Total =" sum}'
	> ls | awk 'BEGIN{print "txt file list"} /\.txt$/{print $1} END{print "-END-"}'


<명령어>
awk : 파일로부터 레코드를 선택,레코드에 포함된 값을 조작,데이터화 목적으로 사용
	<실행코드> '/키워드/{action}' filename
			> 해당 파일에 해당 키워드에 해당하는 필드만 action을 실행
			> {print $1}		: 첫번째 필드만 출력
			> {print $1,$2}		: 첫번째와 두번째 필드를 공백(',')을 포함하여 출력
			> {print NR .... }	: 행의 번호를 출력
			> {print... NF } 	: 필드의 갯수를 출력 	
	[옵션]
	-F	필드구분문자		해당문자로 필드를 구분하여 실행
					> []안에 여러개의 구분자를 사용해서 필드를 나눌 수 있음
	-v	OFS='문자'		해당문자를 출력되는 필드 사이 공백에 삽입

xargs
cp 	-V 	$(실행할 명령문)
	-v				복사 시 파일의 복사 상태를 출력
sort 	-u	파일			해당 파일의 중복된 내용 제거