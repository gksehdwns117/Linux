======================= topic 9 : Testlet 1 =================================
302. 1-2 #1 사례 연구
"Visual Studio App Center는 사용중인 모바일 애플리케이션 충돌 및 장치 유형의 보고를 중앙 집중화하는데 
사용해야함"
1) App Center Analytics는 사용자 행동과 고객참여를 이해하여 앱을 개선하는데 도움이 되고 SDK는 세션
수,모델, OS 버전과 같은 장치 속성을 자동으로 캡처함
2) App Center Crashes는 앱이 충돌할때마다 자동으로 충돌(Crashes) 로그를 생성함

303. 5-1-3  #2 사례 연구
• Fork는 원래 코드베이스에서 실험적,위험 또는 기밀 변경 내용을 격리하는 좋은 방법으로 모든 파일, 커밋, 
분기(선택사항)를 포함하는 리포지토리의 전체 복사본
• 새 Fork는 누군가가 원래 리포지토리를 복제한 다음 비어 있는 새 리포지토리로 푸시하는 것처럼 작동하
고 포크를 만든 후에는 끌어오기 요청이 새 파일, 폴더 및 분기를 전달하지 않는 한 리포지토리 간에 공유
되지 않음
1) Project2 Repo 생성
2) Fork를 사용하면 Team2에서 변경한 내용을 Pull 요청을 만들어 업스트림 Project2 Repo에 다시 병합 가능
3) Fork가 생성되면 기본적으로 Mater 분기도 생성되기 때문에 마스터 브런치에 적용할 정책을 생성

304. 문제없음
305. 1-6-4 ***  (303번과 같은 문제)
======================= topic 10 : Testlet 2 =================================
306. B > C #2 사례 연구
"Windows Server 2016을 실행하는 10개의 가상 시스템이 포함된 'Pool7'이라는 배포 풀"
• LCM(Local Configuration Manager)은 DSC의 엔진으로 모든 대상 노드에서 실행되며 노드로 전송되는 구성
을 구문 분석하고 제정하는 역할을 함
• ConfigurationMode는 LCM이 실제로 대상 노드에 구성을 적용하는 방법을 지정함
☞ 'ApplyOnly' 설정으로 DSC는 구성을 적용하고 새 구성을 대상 노드에 푸시하거나 새 구성을 서빗스에서 
가져오지 않는 한 더 이상 수행하지 않는 방법
☞ 'ApplyAndMonitor' 설정은 기본값으로 LCM은 모든 새 구성을 적용하고 새 구성의 초기 적용 후 대상 노
드가 원하는 상태에서 벗어나면 DSC는 불일치를 로그에 보고함
☞ 'ApplyAndAutoCorrect' 설정으로 DSC는 모든 새 구성을 적용하고 새 구성을 처음 적용한 후 대상 노드
가 원하는 상태에서 벗어나면 DSC는 불일치를 로그에 보고한 다음 현재 구성을 다시 적용
• ConfigurationMode를 'ApplyAndAutocorret'로 변경하는 것이 합리적임
B : VM은 이미 추가되었으며 다음으로 관리되는 컴퓨터를 구성해야됨.

307. 4-1-3 (303번과 같은 문제) *** 
• Fork는 원래 코드베이스에서 실험적이거나 위험하거나 기밀인 변경사항을 분리하는 좋은 방법으로 모든 
파일, 커밋/분기를 포함하는 저장소의 완전한 복사본
• 새로운 Fork는 마치 누군가가 원래 Repo를 복제한 다음 비어 있는 새 Repo로 푸시하는 것처럼 작동함
• Fork가 생성된 후에는 Pull 요청을 통해 전달되지 않는 한 새 파일, 폴더 및 분기가 Repo간에 공유 X
1) Project2는 자동 빌드 정책을 사용함 *** > 마스터 분기의 정책 생성 ?? Repo 생성 ??
2) Team2가 Project2 사본에 대한 변경사항에 대해 독립적으로 작업할 수 있도록함
3) Project2의 복사본에서 Team2가 수행한 모든 중간 변경에 Project2의 빌드 정책에 정의된 것과 동일한 제
한이 적용되는지 확인하기 위함

308. 2-1-4  #2 사례 연구
https://docs.microsoft.com/ko-kr/azure/automation/automation-dsc-getting-started
• 파일을 ps.1 유형으로 생성함 > automation으로 생성한 구성파일 import > compile
Automation 구성 과정 문제
======================= topic 11 : Testlet 3 =================================
309. 2-4 #1 사례 연구
> 문제 : 투자 계획 고갈 제품군에 대한 릴리스 보존 정책의 구성방법
 
"기본적으로 모든 릴리스는 60일 동안 보관해야 하는 프로덕션 릴리스를 제외하고 30일 동안 사용할 수 있
어야함
1) 글로벌 기본 보존 정책은 모든 빌드 파이프라인에 대한 기본 보존 값을 설정합니다. 빌드 파이프라인 작
성자는 이러한 값을 재정의할 수 있습니다.
2) 60일 동안의 보관정책

310. D  #2 사례 연구
"Project3는 SonarQube와 통합될 예정이다."
• 먼저 SonarQube에서 프로젝트를 생성하고 토큰을 가져온 다음 Azure DevOps에서 서비스 연결 생성
• DevOps 플랫폼 통합을 위하여 전역 SonarQube 설정을 지정 > 개인액세스토큰(PAT) 생성

311. C ** #2 사례 연구
"Project4는 Docker image를 생성하고 이미지를 Azure Container Registry에 푸시하는 빌드 파이프라인 지
원을 제공할 예정이다. Project4는 기존 Docker 파일을 사용합니다."
• 먼저 Build 단계에서 Docker 작업을 생성해야함??

312. 1-3-4 #2 사례 연구
"Project1은 증분 빌드 및 타사 SDK 구성 요소를 지원함"
2) 머신이 에이전트 풀(읽기/관리) 범위로 생성된 풀에 참여할 수 있으려면 개인 액세스 토큰 또는 PAT가 필
요함
3) 클러스터에서 Azure Pipeline 에이전트를 실행하여 유형에 관계없이 모든 서비스를 테스트할 수 있음

======================= topic 12 : Testlet 4 =================================
313. 3-2 > 3-4 #2 사례 연구
"Project5에는 Azure Reposit의 Git 저장소가 포함되며, 저장소의 /folder1 내의 변경 사항을 제외한 모든 변
경에 대응하여 빌드를 시작하는 지속적인 통합 트리거가 포함됩니다."
/folder 경로(Path)를 제외한 모든 경로(Path) 포함

314. C (310번과 같은 문제) #2 사례 연구
프로젝트를 먼저생성 ?? 프로젝트가 없어도 서비스 엔드포인트 생성이 가능??
기본 시퀀스 DBCA??

315. C (311번과 같은 문제) #2 사례 연구
316. 1-3-4 (312번과 같은 문제) #2 사례 연구

317. 1-3-6 #2 사례 연구
"Project6는 빌드 및 배포 파이프라인에 대한 지원을 제공할 것이다. 현재 활성 소프트웨어 버그를 나타내
는 작업 항목 수가 0인 경우에만 배포가 허용됩니다."
• 릴리스 게이트의는 사건 및 문제관리, 작업항목, 인시던트, 문제에 대한 필수 상태를 확인함
ex. 우선 순위 0 버그가 존재하지 않는 경우에만 배포가 발생하고 배포 후에 활성 인시던트가 없는지 검증
이 수행되는지 확인하는 시나리오
1) Azure Pipelines의 릴리스 탭에서 릴리스 파이프라인 > 편집을 선택하여 파이프라인 편집기를 오픈
2) 생산 단계에 대한 사전 배포 조건 아이콘을 선택하여 조건 패널을 열어주고 게이트 섹션에서 스위치 컨
트롤을 사용하여 게이트를 활성화함
3) '+' 추가를 선택하고 작업 항목 쿼리 게이트에서 기존 작업 항목 쿼리를 선택하여 게이트를 구성
======================= topic 13 : Testlet 5 =================================

318. C > A #1 사례 연구
"테스트 서버는 처음 배포될 때 올바르게 구성되지만 시간이 지남에 따라 구성 드리프트가 발생하여 Azure 
Automation 상태 구성이 구성을 수정하지 못함"
• ConfigurationMode의 매개변수를 ApplyOnly에서 ApplyAndAutocorrect로 변경하는 솔루션
☞ Register-AzureRmAutomationDscNode cmdlet은 Azure 가상 머신을 Azure Automation 계정의 APS DSC 
노드로 등록함

319. C > D #1 사례 연구
"새로운 기능 개발을 지원하는 분기 전략을 사용해야함"
• 기능 격리는 개발 격리의 특수한 파생물로, 표시된 대로 기본 또는 개발자 분기에서 하나 이상의 기능 분
기를 분기할 수 있음
• 새로운 기능은 따로 개발해야하므로 기능(특징) 분리를 사용해야함
A : 릴리스 격리는 메인에서 하나 이상의 릴리스 분기를 도입하여 동시 릴리스 관리, 다중/병렬 릴리스, 릴리
스 시 코드베이스 스냅샷을 허용함
B : 기본 전용 전략은 추가 가시성 기능을 활성화하기 위해 폴더 기반이거나 기본 폴더가 분기로 변환될 수 
있어 변경 사항을 기본 분기에 커밋하고 선택적으로 개발 및 릴리스 이정표를 레이플로 표시함
C : 안정적인 메인 브런치를 유지하고 보호해야 할 때 메인에서 하나 이상의 개발 브런치를 브런치할 수 있
어 격리 및 동시개발이 가능하고 기능/조직/임시협업을 통해 개발 분기에서 작업을 격리할 수 있음

320. B #1 사례 연구
"코드 품질과 릴리스 품질이 중요하고 릴리스 동안 활성 버그가 릴리스에 대해 기록된 경우 배포가 단계 사
이에 진행되어서는 안됨."
• 배포(전개) 게이트는 작업 항목 또는 문재 관리 시스템에 활성 문제가 없는지 확인하려고함

321. 1-4 #1 사례 연구
"기본적으로 모든 릴리스는 60일동안 보관해야 하는 프로덕션 릴리스를 제외하고 30일동안 사용할 수 있어
야함"
1) 전역 기본 보존 정책은 모든 빌드 파이프라인에 대한 기본 보존 값을 설정하며 빌드 파이프라인 작성자
는 이러한 값을 재정의할 수 있음
2) 특정 단계에 배포된 릴리스를 더 많이 보존할 수 있음(단계 보존정책)

322. 2-1 > 1-1 #1 사례 연구
"투자 계획 응용 프로그램 제품군에는 다중 계층 웹 응용 프로그램 1개와 iOS 모바일 응용 프로그램 2개가 
포함되고 직원들은 하나의 모바일 애플리케이션을 다른 하나는 고객이 사용함"
"방화벽을 통해 들어오는 새로운 연결을 최소화해야함."
1) 빌드 에이전트는 소스 제어 시스템에서 호스팅할 수 없음 > 호스팅 서비스에서 호스팅
2) 호스팅 서비스

323~326. ??
