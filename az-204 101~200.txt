101. B
• '응용 프로그램 요청 라우팅'은 프록시 서버를 사용하여 IIS에서 인터넷 트래픽을 제어하기 위함으로 상태 정보 관리는 지원하지 않음
> 대신 Azure Cache for Redis를 배포하고 구성하여 웹 애플리케이션을 업데이트함
102. B
가능은 하지만 최악의 솔루션...

103. 1-1
1) IDatabase.cache = Connection.GetDatabase(); - IDatabase 인터페이스를 사용
2) cache.KeyDelete("Team") - 캐시 항목을 무효화하거나 제거하려면 단순히 키를 삭제

104. 7-1-8-6-3 ****
1) 하나 이상의 메시지가 큐에 도착할 때 발생하는 로직 앱 트리거를 추가합니다.
2) 앱이 15분마다 실행되도록 예약하는 반복 트리거를 추가합니다.
3) 온도가 해당 임계값을 벗어날 경우 지정된 직원에게 이메일을 보내는 작업을 추가합니다.
4) 서비스 버스 대기열에서 IoT 온도 데이터를 읽는 트리거를 추가합니다.
5) 하나 이상의 메시지가 큐에 도착할 때 발생하는 로직 앱 작업을 추가합니다. 
6) 온도를 상한 및 하한 임계값과 비교하는 조건을 추가합니다.
7) 빈 로직 앱을 생성합니다.
8) 서비스 버스 대기열에서 IoT 온도 데이터를 읽는 작업을 추가합니다.
• 빈 논리앱 생성 > 하나 이상의 메시지가 대기열에 도착할 때 논리 앱 트리거 추가 > IoT 온도 데이터 읽기 작업 > 상한 및 하한 온도 비교 > 이메일 전송

105. funnels(구매자 행동) - Retention(유지) - Impact - Users 
> funnels - Impact - Retention - User flows
1) 사용자가 가장 자주 방문하는 페이지는 제품 구매와 관련이 있습니까?
> '구매자 행동(funnels)'는 애플리케이션이 여러 단계와 관련된 경우, 고객 대부분이 전체 프로세스를 거치는지 아니면 특정 시점에서 프로세스를 종료하는지를 알아야 하는데, 이러한 웹 애플리케이션에서 일련의 단계를 거치는 것을 funnels 방식, Application Insights Funnels를 사용하여 사용자에 대한 정보를 얻고 단계변 전환율을 모니터링할 수 있음
2) 제품 표시 페이지의 로딩 시간이 사용자의 제품 구매 결정에 어떤 영향을 미칩니까? 
> '영향(Retention)'을 생각하는 한 가지 방법은 사이트의 일부 측면에서 속도가 느려지면 사용자가 계속 머무를 수 있는지 여부에 미치는 영향에 대해 팀의 누군가와 논쟁을 해결하기 위한 궁극적인 도구로, 사용자는 어느 정도의 속도 저하를 견딜 수 있지만 Impact는 사용자 전환을 최대화하기 위해 최적화와 성능의 균형을 가장 잘 맞추는 방법에 대한 통찰력을 제공함.
3) 애플리케이션을 계속 사용하려는 사용자의 결정에 가장 큰 영향을 미치는 이벤트는 무엇입니까? > '보존(Retention)' 기능을 사용하면 앱으로 돌아오는 사용자 수와 특정 작업을 수행하거나 목표를 달성하는 빈도 분석이 가능함
4) 애플리케이션에서 사용자가 반복적인 동작을 자주 수행하는 곳이 있나요?
> 사용자 흐름 도구는 사용자가 페이지와 기능 사이를 탐색하는 방법을 시각화함
*** '사용자(User)'는 사용자가 앱을 사용하는 방식에 관한 데이터

106. A ?? C ?? ***
이미 API 백엔드가 존재하여 Azure API Management로 가져와야함
Azure API Management 서비스 뒤에서 기존 API(Open API 사양 사용)를 사용하려면 
'Import-AzApiManagementAPI' 명령어를 사용할 수 있음

107. C,E > A,D
• 'ReplyToSessionId(reply-to-group-id) 값은 ReplyTo 정보를 보강하고 응답 엔터티로 보낼 때 응답에 대해 설정해야 하는 SessionId를 지정함
• CorrelationId(correlation-id) 응용 프로그램이 상관 관계를 위해 메시지에 대한 컨텍스트를 지정할 수 있도록 함 ex. 응답중인 메시지의 MessageId를 반영
B,E : 'DelivertCount'는 메시지에 대해 시도된 배달 횟수로, 메시지 감금이 만료되거나 수신자가 메시지를 명시적으로 포기하면 카운트가 증가함
C : 'SequenceNumber'는 메시지가 브로커에 의해 수락 및 저장될 때 메시지에 할당되는 고유한 64bit 정수이며 실제 식별자로 작동하여 파티션된 엔터티의 경우 최상위 16bit는 파티션 식별자로 반영함

108. C > A
• 'batchSize'를 높여 한 번에 더 많은 메시지가 처리될 수 있도록 할 수 있음 > 여기서 함수는 병렬로 실행되고 각 함수는 SQL 데이터베이스에 대한 새 연결을 생성함 > host.json 파일에서 해당 속성을 수정할 수 있음

109. A (101~102번과 같은 시나리오)

110. 2-1-3-1 > 1-4-2-4
1) date(now()-1d)는 전날을 의미.. ago(1d)은 24시간 동안의 시간적 의미
4) Summarize(요약)을 사용하여 하나 또는 더 많은 열을 만들고 여기에 집계를 적용함
> 요약의 가장 일반적인 용도는 각 그룹과 결과 수를 반환하는 count

111. 1-2-1-4
1) 웹 앱에 대한 로깅을 구성하는 명령어 config
2) az webapp log config [--docker-container-logging{filsystem.off}]
3) 웹 앱의 로그 기록에 대한 명령
4) "실시간 액세스"의 명칭을 보아 download 보다는 tail의 명령어가 더 적절함
> "tail" : 웹 앱에 대한 라이브 로그 추적 시작
  "download" : 웹 앱의 그 "기록"을 zip 파일로 다운로드


112. A,B > B,C
(가용성 테스트)
• URL Ping 테스트는 Azure portal에서 생성할 수 있는 간단한 테스트
• 다단계 웹 테스트는 더 복잡한 시나리오를 테스트하기 위해 재생할 수 있는 일련의 웹 요청 기록으로, Visual Studio Enterprise에서 생성되고 실행을 위해 포털에 업로드됨.
• 사용자 지정 추적 가용성 테스트는 가용성 테스트를 실행할 사용자 지정 응용 프로그램을 만들기로 결정한 경우 'TrackAvailability()' 메서드를 사용하여 결과를 Application Insights로 보냄

113. Private - Public - Internal > External - Private - Authorization
1) 캐싱 유형은 내장 API Management를 사용하려면 Internal 유형을, Redis용 Azure Cache로 외부 캐시를 사용하려면 External 유형을 선호
> Internal 유형의 캐싱은 소비 가격 계층에서 지원하지 않으므로 External
2) 다운스트림 유형은 다운스트림이 허용되지 않으면 '없음', 개인 캐싱이 허용되면 'private' , 개인 및 공유 다운스트림 캐싱이 허용되면 'public' 유형을 사용함
3) <!-- allow-private-response-caching이 "true"일 때 존재해야함 -->
 
114. D > B
• URL ping은 "테스트 빈도","종속 요청 구문 분석","재시도 사용"을 지원함
• 재시도 활성화는 테스트가 실패하면 짧은 간격 후에 재시도되어 세번의 연속 시도가 실패한 경우에만 실패가 보고되고 일반적인 테스트 빈도로 후속 테스트를 수행하여 다음 성공 때까지 재시도가 일시적으로 중단됨.
D : 해당 주어진 조건들이 "URL Ping test"에서도 지원이 가능함
> 더 복잡한 시나리오는 D를 사용?? (B,D의 차이점)

115. B
• 자신의 비즈니스 로직을 사용하여 TimeTrigger 함수에 지정된 구성에 따라 주기적으로 실행되는 TrackAvailability()를 사용하여 Azure 함수를 생성하고 테스트의 결과는 가용성 결과 데이터를 쿼리하고 경고할 수 있는 Application Insigths 리소스로 전송됨.
• 이를 통해 포털에서 가용성 모니터링을 통해 수행할 수 있는 것과 유사한 사용자 지정 테스트를 생성할 수 있고, 사용자 지정 테스트를 사용하면 포털 UI를 사용하여 가능한 것보다 더 복잡한 가용성 테스트를 작성하고, Azure VNET 내부에서 앱을 모니터링하고 끝점 주소를 변경하거나 해당 지역에서 이 기능을 사용할 수 없는 경우에도 가용성 테스트를 만들 수 있음

116. 4-1-2-5-3 > 4-5-1-2-3
• MS ID 플랫폼에 애플리케이션 등록하고 클라이언트 앱 ID를 사용하여 클라이언트 빌드 후, 인증 공급자 생성 GraphServiceClient 인스턴스 생성하고, Graph API 참조에 대한 요청을 호출
117. 5-2-6 > 2-3-6
• 시작하기 전에 Log Analytics 작업 영역을 생성 > 논리앱에 대한 로깅을 설정하려면 논리앱을 만들 때 Log Analytics를 사용하도록 설정하거나 기존 논리 앱에 대한 Log Analytics 작업 영역에 Logic Apps 관리 솔루션을 설치 > Azure Logic App에 진단 설정을 추가

118. 2-1-5-4 > 1-4-2-5
• VM Insights를 구성하는 단계는 Log Analytics 작업 영역 생성 , VMInsights 솔루션을 작업 공간에 추가 , 모니터링할 가상 머신 및 가상 머신 확장 집합에 에이전트를 설치하는 단계
• Log Analytics 작업 영역을 VM 인사이트와 함께 사용하려면 먼저 VMinsights 솔루션이 설치되어 있어야함

119. Inbound - Outbound - Backend  ***

120. C
• 최대 한 번 배달 보장과 FIFO 보증이 필요한 경우 Service Bus 대기열을 선택하여 메시지를 트랜잭션으로 그룹화해야 함

121. 4-6-7-2-5
상자1) 특정 일정에 따라 작업, 프로세스 또는 작업을 정기적으로 실행하려면 기본 제공 되풀이
상자2) 상태(조건) - 지정된 조건을 전달한 후에만 논리앱에서 특정 작업을 실행하려면 조건문을 추가하여 워크플로의 데이터를 특정 값 또는 필드와 비교함
상자3) 대기열에 메시지 저장
상자4) 쿨 또는 아카이브 계층으로 계층화함
상자5) Blob 2 나열

122. A

123. A > B
124. B > A
• Service Queue ?? Event Grid ??
125. B
• Service Queue ?? Event Grid ??

126. 3-2-1


127. C > A
이미 인스턴스가 생성되었으므로 Service Bus Queue 생성

128. n-y-n > n-y-y
1) 'QueueDescription.LockDuration' 속성은 엿보기 잠금 기간을 가져오거나 설정하는 메시지가 다른 수신자에 대해 잠겨 있는 시간으로 최대값은 5분, 기본값은 1분임 > 구문에는 설정 X
2) 'PeekMessage' 메서드를 호출하여 대기열에서 메시지를 제거하지 않고 대기열 앞에 있는 메시지를 엿볼 수 있음
3) 'GetMessageAsync'는 기본 요청 옵션을 사용하여 큐에서 메시지를 가져오는데, 이 작업은 검색된 메시지를 기본 표시 제한 시간 동안 대기열에서 보이지 않는 것으로 표시하지만 메시지를 보이지 않게 표시만 하고 삭제하지는 않음

129. C (127번과 유사한 시나리오 문제)
이미 인스턴스가 생성되었으므로 Service Bus Queue 생성

130. B (122번과 같은 시나리오)
• Azure Service bus Queue 트리거를 사용하는 Azure Function App을 생성함

131. 4-2-6 > 5-1-4
• 단일 주제만 생성하는 경우 레스토랑에 따라 메시지 필터링이 없어 모든 운전자는 모든 주문에 액세스 할 수 있음
• 단일 Bus 네임스페이스 생성 > 단일 Bus 주제 생성 > 각 레스토랑에 대한 구독 생성

132. 1-2-3-4 > 1-1-2-1
1~2) NotificationHubClient 인스턴스 생성
3) 알림 허브 초기화 구문 "CreateClientFromConnectionString"
4) 푸시 알림을 전송 "SendWindowsNativeNotificationAsync"

133. A,B
• Azure Service bus 큐 및 주제에 중복 검색이 존재하여 중복 감지를 활성화하면 지정된 기간 동안 대기열이나 주제로 전송된 모든 메시지의 애플리케이션 제어 MessageId를 추적하는데 큰 도움이 됨.
• Queue Stroage는 트랜잭션 지원을 제공하지 않으며 Event Hub는 무한 시간 동안 이벤트를 저장하도록 구성할 수 없음
C : Storage 대기열을 쿼리하고 동일한 내용을 가진 메시지가 이미 존재하는지 또는 이전에 존재했는지 알아낼 수 있는 메커니즘이 없음
D : Azure Event Hub에는 중복 검색이 없음

134. 2-4
• API 수준에는 Logic Apps 및 HTTPS 끝점이라는 두개의 대상이 있고 작업 수준에는 Azure Resource 및 HTTPS 끝점이라는 두개의 대상이 있음 > 문제는 API 수준

135. 1-3 > 1-1 ***
1) 사용자 정의 주제는 SAS(공유 액세스 서명) 또는 키 인증을 사용, MS는 SAS를 권장하지만 키 인증은 간단한 프로그래밍을 제공하고 많은 기존 웹훅 게시자와 호환되어 이 경우 SAS 토큰에서 제공하는 만료 시간이 필요함.
2) Event Grid는 ValidationCode Handshake(프로그래밍 방식) 및 ValidationURL Handshake(수동)의 두가지 구독 유효성 검사 방법을 지원하여 엔드포인트의 소스 코드를 제어하는 경우 해당 방법을 사용하는 것이 좋음

136. y-n-n
1) XML 세그먼트는 정책의 <인바운드> 섹션에 속합니다.
> 들어오는 요청을 해당 작업에 대한 API 설정에 지정된 것과 다른 백엔드로 리디렉션하려면 'set-backend-service' 정책을 사용함
2) 본체 크기가 256k보다 크면 오류가 발생합니다.
> 조건이 256k 가 아닌 512k에 있음
3) 요청이 "https://contso.com/api/9.2/"인 경우 정책은 상위 버전을 유지합니다.
> set-backend-service 정책은 들어오는 요청의 백엔드 서비스 기본 URL을 정책에 지정된 것으로 변경함

137. B,C > A,C
• 직접 구축하는 것보다 게시/구독 모델을 지원하는 사용 가능한 메시징 제품 및 서비스를 사용하는 것이 좋음 > Azure에서는 Service Bus 또는 Event Grid를 사용하는 것이 좋음

138. A > D
• 토픽 클라이언트를 사용하여 엔터티로부터 지속적으로 메시지를 수신하는 데 사용되는 
RegisterMessageHandler를 호출하고 메시지 핸들러를 등록하여 메시지를 수신하기 위해 새 스레드를 시작함 > 해당 핸들러는 수신자가 새 메시지를 수신할 때마다 대기함
"subscriptionClient.RegisterMessageHandler(ReceiveMessageAsync,messageHadlerOptions);"

139. B

140. B
• Service bus를 사용하는것은 적절하지만 Windows VM이 있다고 해서 비용 요구 사항이 해결되지는 않음

141. 2-5-3-4-2
1,5) Azure API Management의 정책은 인바운드,백엔드,아웃바운드 및 오류 발생으로 구분
on-error 섹션이 없는 경우 호출자는 오류 조건이 발생하면 400 또는 500 HTTP 응답 메시지를 받음
2,3) Context
4) set-stauts 반환 응답 정책은 파이프라인 실행을 중단하고 호출자에게 기본 또는 사용자 지정 응답을 반환 > Context 변수 또는 정책 설명을 통해 사용자 정의 응답을 지정할 수 있음

142. 4-2
• Windows 푸시 알림 서비스(WNS) 네이티브 알림
> ServiceBusNotification : windows
> 콘텐츠 형식은 'application/json;charset=utf-8' 또는 application/xml로 설정하고 알림유형(X-wns-Type)이 'wns/raw'이면 application/octet-stream 으로 설정함

143. B
• 이벤트 허브의 전용계획에서는 최대 1024개의 파티션이고 더 낮은 계획에서는 더 적은 파티션을 갖고 있음, 장치 ID당 파티션을 원하고 저장소당 1~5개의 장치가 있는 2000개의 저장소가 있으므로 최소 2000개의 파티션이 필요로함 > 따라서 EventHub에서는 파티션의 부족으로 X

144. 2-1-3 > 2-6-3 ***
https://www.cognizantsoftvision.com/blog/azure-event-grid-vs-event-hubs/
• EventGrid와 EventHubs의 차이점은 Event Hubs가 데이터 수집을 위해 끝점만 수락하고 게시자에게 데이터를 다시 보내는 메커니즘을 제공하지 않는 반면 Event Grid는 게시자에게 발생하는 이벤트를 알리기 위해 HTTP 요청을 보냄.
• Event Grid는 Azure Functions를 트리거, Evnet Hubs의 경우 Azure Functions은 이벤트를 가져아 처리해야 함
• 다른 차이점은 내구성으로, Event Grid는 대기열 메커니즘이 아닌 분배 시스템으로, 이벤트가 푸시되면 즉시 푸시되고 처리되지 않으면 영원히 사라지고 전달되지 않은 이벤트를 스토리지 계정으로 보내지 않는 데드 레터링 프로세스를 가짐, 기본적으로 이 옵션은 비활성화되어 있으므로 활성화해야 하는 경우 Evnet Grid를 만들 때 스토리지 계정을 지정해야함
반면, Event Hubs에서 게시자와 구독자는 내구성 있는 저장소에서 읽고 쓸 수 있는데 데이터는 최대 7일 동안 Evnet Hubs에 보관된 다음 재생할 수 있어 이를 통해 특정 시점에서 다시 시작하거나 이전 시점에서 다시 시작하고 필요할 때 이벤트를 처리할 수 있음
• Event Grid는 이벤트의 순서를 보장하지 않지만 Event Hubs는 파티션을 사용하며 순서가 지정된 시퀀스이므로 동일한 파티션에서 이벤트의 순서를 유지할 수 있음

145. B
146. B
147. A

148. C
VM을 다시 배포하면 VM을 새 Azure 인프라 내의 새 노드로 이동한 다음 전원을 다시 켜서 모든 구성 옵션 및 관련 리소스를 유치함

149. A
• kubectl apply 명령어는 파일 또는 표준 입력에서 자원에 대한 구성 변경을 적용함
150. B

151. B > A
• 호스트 재정의를 지정하는 기능은 HTTP 설정에 정의되어 있으며 규칙 생성 중에 모든 백엔드 풀에 적용할 수 있음
• HTTP 설정은 개별 백엔드 풀 구성원에서 호스트 이름을 파생시키는 옵션으로 구성된 경우 백엔드 풀 구성원의 FQDN에서 호스트 이름을 동적으로 선택하는 옵션도 제공함.
152. B
• ASE(Azure App Service Environment)는 격리된 환경에서 앱을 실행하는데 사용
153. A > B
• 종단 간 SSL의 경우 Azure App Service 웹 앱과 같은 신뢰할 수 있는 Azure 서비스는 애플리케이션 게이트웨이에서 백엔드를 화이트리스트에 추가할 필요가 없어 인증서를 추가할 필요가 X

154. B
• Webjob과 Webjob SDK
155. D
• 관리되는 가용성 집합의 오류 도메인 수는 지역에 따라 다름

156. B
• 각 가용성 집합은 최대 3개의 오류 도메인과 20개의 업데이트 도메인으로 구성 가능함


157. B
• Continuous 유형의 Webjob 사용
158. A
• Webjob의 Continuous는 웹앱이 실행되는 모든 인스턴스에서 실행되며, 선택적으로 Webjob을 단일 인스턴스로 제한할 수 있음

159. B
You include the Data Management Gateway tool in your migration strategy.
몽고스토어를 사용

160. B
• Evnet Grid는 경우에 따라 필요한 변경사항을 유지하지 않음
> 발생한 순서대로 프로세스 변경을 보장하지 않음
• 대신 변경피드를 사용 > 변경피드는 순서,보장,내구성,불변,읽기를 제공함 > 변경피드는 표준 Blob 가격 책정 비용으로 저장소 계정의 특수 컨테이너에 blob으로 저장되어 요구사항에 따라 이러한 파일의 보존 기간을 제어할 수 있음
161. B
• 데이터 수집기 API는 데이터를 가져오기 위한 것이 아니라 사용자 지정 메트릭을 게시하기 위한 기능

162. B > A
163. B
• 'Set-AzSqlDatabaseDataMaskingPolicy' cmdlet은 데이터베이스에 대한 마스킹 정책을 설정하지만 마스킹 규칙은 설정하지 않음 > 마스킹은 기본적으로 활성화되어 있음
164. A

165. C
• AAD의 관리 ID를 사용하면 앱에서 Azure Key vault와 같은 다른 AAD 보호 리소스에 쉽게 액세스 할 수 있음

166. C
• MFA는 조건부 액세스 정책에 의해 활성화됨 > 조건부 액세스 정책을 사용하도록 설정하는 것은 클라우드의 Azure MFA 에 대해서만 작동하며 Azure AD의 프리미엄 기능임

167. B
You require a redirect URI from the developer for registration purposes.
• AAD에서 애플리케이션을 등록하는 데 클라이언트 ID가 필요하지 않음 > 등록 시 포털에서 클라이언트 ID와 테넌트 ID를 제공하여 결과적으로 리디렉션 URI만 있으면 됨.

168. B,D
• EnablePurgeProtection 속성이 지정된 경우 이 볼트에 대해 즉시 삭제에 대한 보호가 활성화되어 이경우 일시 삭제도 활성화해야함 > Key vault에서 'PurgeProtection'을 사용하도록 설정하면 되돌릴 수 없으며 활성화되면 변경하거나 제거할 수 없음

169. B 
AAD ID Protection을 사용
170. A
AAD ID Protection을 사용
171. B

172. C
• 페더레이션 도메인의 AAD 자격증명을 사용하여 WIndows에 로그인하는 경우 Active Directory 통합인증 방법을 사용함.

173. B
PurgeProtection , SoftDelete

174. B
175. A
176. B

177. C
• D1은 공유 계층으로, 자동크기 조정을 제공하지 않으므로 해당 기능을 지원하는  
Standard,Premium,Isolated 계층으로 전환해야함.

178. D > C
C(Metric Signal type)
• 메트릭 경고는 메트릭 중 하나가 임계값을 초과할 때 알림을 받는 방법을 제공하며, 메트릭 경고는 다양한 다차원 플랫폼 메트릭, 사용자 지정 메트릭, Application Insights 표준 및 사용자 지정 메트릭에서 작동함

179. D > B
• Query Type 속성은 ㄱㅁ색 쿼리의 구문을 지정하는 값을 가져오거나 설정 > 기본값은 '단순'으로 쿼리가 Lucene 쿼리 구문을 사용하는 경우 '전체'를 사용함

180. D ??? B ??? ***

181. B > A
182. B
HTTPS 백엔드가 아닌 Azure 리소스
183. A > B
HTTPS 백엔드가 아닌 Azure 리소스
184. A > B

185. D
문제는 쿼리된 정보를 가격대와 공항까지의 거리로 필터링한다는 것임

186. B
개발자는 코드보기를 사용하고, 비개발자는 Designer를 사용함??

187. C??? ***
Event Grid 구독,주제,처리기의 대한 개념 ??

188. 1-2-3
https://docs.microsoft.com/ko-kr/azure/cdn/cdn-features
"Azure CDN(콘텐츠 배달 네트워크)을 사용하고 대기시간과 비용을 최소화하면서 동적 콘텐츠에 대한 최대 성능을 보장함"
• Standard Akamai Dynamic Site Acceleration은 대기 시간과 비용을 최소화하면서 동적 콘텐츠에 대한 최대 성능을 보장함
• Premium은 Microsoft/Akamai를 지원하지 않고, only Verizon만 지원
• Standard Microsoft , Standard Verizon 타입은 Dynamic Site Acceleration 기능을 지원하지 않음

189. 1-4
"VM은 중요하며 과거에 백업, 장애가 발생한 경우 디스크의 현재 위치 복원을 포함하도록 7일 스냅샷에서 빠른 복원을 활성화해야함"
1) IaaS VM에서 디스크의 원본 위치 복원은 Azure Backup의 기능임
"VM은 높은 네트워크 대기 시간, jitter 및 높은 CPU 사용률을 보여줌"
2) 가속화된 네트워킹은 VM에 대한 '단일 루트 I/O 가상화(SR-IOV)'를 가능하게 하여 네트워크 성능을 크게 향상 시키며, 이 고성능 경로는 지원되는 VM 유형에서 가장 까다로운 네트워크 워크로드에 사용하기 위해 데이터 경로에서 호스트를 우회하여 대기시간, 지터, CPU 사용률을 줄임

190. 1-3-5 > 5-1-2
1) 'allowedMemberTypes'는 "사용자"로 설정하여 이 앱 역할 정의를 사용자 및 그룹에 할당 할 
수 있는지 또는 애플리케이션으로 설정하여 다른 애플리케이션에 할당 할 수 있는지를 지정함
(User, application 둘다 설정 가능)
2) "콘텐츠를 검토하려면 사용자가 ContentReviewer" 역할의 일부여야함
3) 값은 인증 및 액세스 토큰의 역할 클레임에 포함될 값을 지정함

191. 3-2 > 4-1
"콘텐츠를 검토하려면 사용자가 Azure AD 자격증명을 사용하여 ContentAnalysisService의 웹 사이트 부분에 인증해야 하고 웹사이트는 React로 구축, ... 감사 목적으로 리뷰 작성자의 이메일 주소가 포함되어야함"
• oauth2AllowedTokenImplictFlow : true 값은 웹앱이 암시적 OAuth 2.0 흐름의 ID 토큰을 요청할 수 잇는지 여부를 나타내고, 기본값은 'false'
1) 브라우저 앱 React 이므로 액세스 토큰 ImplictGrandFlow를 활성화
2) 사용자(검토자 이메일)에 대한 ID 토큰이 필요하므로 ImplictGrantFlow를 활성화

192. 1-2
1) "모든 웹사이트와 서비스는 유효한 루트 인증 기간의 SSL을 사용해야함"
2) "인터넷을 통해 액세스 할 수 있는 모든 웹 서비스는 사이트 간 스크립팅 공격으로부터 보호"

193. 5-1-3 > 5-4-1

194. 1-3
1) "콘텐츠를 검토하려면 사용자가 Azure AD 자격 증명을 사용하여 ContentAnalysisService의 웹 사이트 부분에 인증해야함."
Sid 기능은 개인 및 Azure 계정, 세션 ID, 세션별 사용자 로그아웃에 사용됨
2) "완료된 모든 검토에는 감사 목적으로 검토자의 이메일 주소가 포함되어야함"

195. 1-3-3 ***
"앱 수준 보안을 사용하여 보안 기능 엔드포인트를 구현하고 Azure AD를 포함"

196. C
"Shipping Logic App에는 기업 Vnet에 대한 보안 리소스가 필요하고 고정 비용 모델의 전용 스토리지 리소스를 사용해야함"
• ISE 서비스 환경은 모든 엔터프라이즈 규모 통합 요구 사항에 대해 완전히 격리된 전용 환경으로 새 통합 서비스 환경을 만들면 Azure Vnet에 주입되어 Vnet에서 Logic Apps를 서비스로 배포할 수 있음
• ISE 에는 '가상 네트워크 리소스에 대한 직접적이고 안전한 액세스 제공' , '격리된 개인 저장소'
, 'Logic Apps에 대한 고정 월별 비용을 제공하여 예측 가능한 가격'의 특성이 있음

197. 1-3-4
1) 키 자격 증명 모음 > key vault 이름인 "cpandkeyvault'
2) 비밀 값 'PostgreSQLConn'
3) 참조가 제대로 해결되지 않으면 참조 값이 대신 사용되는 즉, 애플리케이션 설정을 위해 환경 변수가 생성됨

198. 1-4-3-2 > 7-1-6-4
"CryptographicException: 시스템에서 지정된 파일을 찾을 수 없습니다."
해당 오류는 인증서를 URL에서 찾을 수 없기 때문에 생기는 오류
• 인증서 생성 > Key vault에 인증서 업로드 > 인증서를 App Service에 가져오기 > 인증서 지문을 'Website_load_Certificates' 앱 설정에 인증서 지문을 추가함
(해당 과정은 앱이 공유 인프라 계층에 있는 경우 App Serivce 계획을 확장하는 전제조건)

199. 3-1
• JWT 확인 정책을 사용하여 들어오는 각 요청의 액세스 토큰을 확인하여 API Management에서 요청을 사전 승인하고 요청에 유효한 토큰이 없다면 API Management에서 이를 차단함
• JWT 확인 청책은 API의 <inbound> 정책 섹션의 일부로 액세스 토큰의 대사 ㅇ클레임을 확인하고 토큰이 유효하지 않은 경우 오류 메시지를 반환함

200. D,E
아키텍처에서 사용자 인증은 Azure AD를 통해서 이루어짐
